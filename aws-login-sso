#!/usr/bin/env bash
set -o pipefail

readonly filter=${2:-''}
readonly aws_cache_session_file="${HOME}/.aws/.sso-temp-creds"
readonly aws_default_region=${AWS_REGION:-'us-east-1'}
readonly aws_sso_url=${AWS_SSO_URL:-''}

readonly C_BLUE=$(tput setaf 4)
readonly C_GREEN=$(tput setaf 2)
readonly CC_RED=$(tput setaf 1)
readonly C_B_BLUE="${T_BOLD}$(tput bold)$(tput setaf 4)"
readonly C_B_GREEN="${T_BOLD}$(tput setaf 2)"
readonly C_B_RED="${T_BOLD}$(tput setaf 1)"
readonly C_RESET=$(tput sgr0)
readonly T_BOLD=$(tput bold)


info() {
  local left="${C_B_BLUE}[${C_RESET}${T_BOLD} ** ${C_B_BLUE}]${C_RESET} -"
  local msg="$@"
  printf "%s %s\n" "${left}" "$T_BOLD${msg}${C_RESET}"
  sleep .25
}


generate_profiles() {
   aws-sso-util configure populate \
    --sso-start-url $aws_sso_url \
    --sso-region $aws_default_region \
    --region $aws_default_region
 }


choose_account() {
  aws configure list-profiles \
    | sort -k 3 \
    | fzf -q "${filter}" -1 -0
}


sso_login() {
  aws sso login --profile $1
}


fetch_temp_creds() {
  local profile=$1
  local max_tries=${2:-0}

  if ((max_tries>1)); then
    return 1
  fi

  ((max_tries++));

  info "Initializing credential process..."
  aws-sso-util credential-process --profile $profile 2> /dev/null | jq -r --arg profile $profile '. + {Account: $profile}'  > $aws_cache_session_file \
  || {
    info "Session expired..."
    info "Initializing SSO..."
    sso_login $profile
    fetch_temp_creds $profile $max_tries
  }
}


load_session() {
  if ! test -s $aws_cache_session_file; then
    return 1
  fi

  local _session=$(cat $aws_cache_session_file)
  local _access_key=$(echo $_session | jq -r '.AccessKeyId')
  local _secret_key=$(echo $_session | jq -r '.SecretAccessKey')
  local _token=$(echo $_session | jq -r '.SessionToken')
  local _account=$(echo $_session | jq -r '.Account')


  info "Loading aws session from ${C_RED}'${aws_cache_session_file}' ${C_RESET}..."
  export AWS_ACCESS_KEY_ID=$_access_key
  export AWS_SECRET_ACCESS_KEY=$_secret_key
  export AWS_SESSION_TOKEN=$_token
  export AWS_SESSION_NAME=$_account
  export AWS_REGION=$aws_default_region
}


aws_renew_token() {
  local account=$(cat $aws_cache_session_file | jq -r '.Account')
  fetch_temp_creds $account
  load_session
}


check_cli_connection() {
  aws sts get-caller-identity &> /dev/null
}


check_config() {
  local count=$(aws configure list-profiles | wc -l)
  info "Aws Profiles found: ${count}"

  if ((count < 1)); then
    info "Generating profiles..."
    sleep 1s
    generate_profiles
  fi
}


login() {
  check_config
  account=$(choose_account)
  if test -z "${account}"; then
    return 1
  fi

  fetch_temp_creds $account
  load_session
}


aws_logout() {
  unset AWS_ACCESS_KEY_ID
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_SESSION_TOKEN
  unset AWS_SESSION_NAME

  rm $aws_cache_session_file &> /dev/null
  aws sso logout &> /dev/null
}



case $1 in
  --restore) load_session;;
 --re-login) aws_renew_token ;;
   --logout) aws_logout ;;
    --login)
      shift
      login $@ ;;
esac


